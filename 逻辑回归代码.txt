import numpy as np
import matplotlib.pyplot as plt
#文件处理，监督学习所以三列，前两列为对应值，最后一列为对应参数
def loaddate(filename):
    file = open(filename)
    x=[]
    y=[]
    for line in file.readlines():
        line=line.strip().split()
        x.append([1,float(line[0]),float(line[1])])
        y.append(float(line[2]))
        xmat = np.mat(x)
        ymat = np.mat(y).T
    file.close()
    return xmat,ymat
#进行梯度下降计算
def w_calc(xmat,ymat,a=0.001,maxIter=100001):
    W=np.mat(np.random.randn(3,1))
    for i in range(maxIter):
        H=1/(1+np.exp(-xmat*W))
        dw = xmat.T*(H-ymat)
        W=W-a*dw
    return W
xmat,ymat=loaddate('aaa.txt')#aaa为文件名，记得存到相对应的目录
#print('xmat:',xmat,xmat.shape)
#print('ymat:',ymat,ymat.shape)
W=w_calc(xmat,ymat)
#print(W)

#打印对应的值
w0=W[0,0]
w1=W[1,0]
w2=W[2,0]
print('w0:',w0)
print('w1:',w1)
print('w2:',w2)
plotx1=np.arange(1,7,0.01)
plotx2=-w0/w2-w1/w2*plotx1
plt.plot(plotx1,plotx2,c='r',label='fenjiexian')

plt.scatter(xmat[:,1][ymat==0].A,xmat[:,2][ymat==0].A,marker='^',s=150,label='label1')
plt.scatter(xmat[:,1][ymat==1].A,xmat[:,2][ymat==1].A,s=150,label='lambel2')
plt.grid()
plt.legend()


plt.show()